// Test definitions. Do NOT edit this file!

#include <tuple>

#define CATCH_CONFIG_MAIN // defines main() automatically
#include "catch_amalgamated.hpp"

#include "../Hora.hpp" 
#include "../Evento.hpp"

// =====================
// tests for exercise 1
// ---------------------

TEST_CASE("Ex1", "[Probando constructor default]")
{
    Hora h;
    SECTION("Verificando sus atributos iniciales de la hora")
    {
        REQUIRE(h.getHora()==8);
        REQUIRE(h.getMinuto()==0);
    }
    SECTION("Verificando sus atributos iniciales del Evento")
    {
        Evento e;
        REQUIRE(e.getAsunto()=="Sin asunto");
        REQUIRE(e.getDuracion()==60);
        REQUIRE(e.getHoraInicio().getHora()==8);
        REQUIRE(e.getHoraInicio().getMinuto()==0);   
    }
}

// =====================
// tests for exercise 2
// ---------------------

TEST_CASE("Ex2", "[Probando constructor con parametros]")
{
    Hora h(10, 30);
    SECTION("Verificando creacion con parametros de la hora")
    {
        REQUIRE(h.getHora()==10);
        REQUIRE(h.getMinuto()==30);
    }
    SECTION("Verificando creacion con parametros del Evento")
    {
        Evento e(h, 120, "Clase de POO");
        REQUIRE(e.getAsunto()=="Clase de POO");
        REQUIRE(e.getDuracion()==120);
        REQUIRE(e.getHoraInicio().getHora()==10);
        REQUIRE(e.getHoraInicio().getMinuto()==30);   
    }
}

TEST_CASE("Ex3", "[Probando setters]")
{
    Hora h;
    SECTION("Verificando cambios en los atributos de Hora")
    {   
        h.setHora(20);
        h.setMinuto(30);
        REQUIRE(h.getHora()==20);
        REQUIRE(h.getMinuto()==30); 
    }

    Evento e;
    Hora h1(20, 30);
    SECTION("Verificando cambios en los atributos de Evento")
    {   
        e.setAsunto("Clase de POO");
        e.setDuracion(120);
        e.setHoraInicio(h1);
        REQUIRE(e.getAsunto()=="Clase de POO");
        REQUIRE(e.getDuracion()==120);
        REQUIRE(e.getHoraInicio().getHora()==20);
        REQUIRE(e.getHoraInicio().getMinuto()==30); 
    }   
}

TEST_CASE("Ex4", "[Probando Imprimir]")
{
    Hora h(10, 30);
    SECTION("Mostrando en consola la hora")
    {
        h.imprime();
        REQUIRE(true);
    }
    SECTION("Mostrando en consola el evento")
    {
        Evento e(h, 120, "Clase de POO");
        e.imprime();
        REQUIRE(true);
    }
}

TEST_CASE("Ex5", "[Probando validaciones]")
{
    Hora h(23, 60);
    SECTION("Verificando validación de minutos")
    {
        REQUIRE(h.getHora()==23);
        REQUIRE(h.getMinuto()==0);
    }

    Hora h1(24, 30);
    SECTION("Verificando validación de horas")
    {
        REQUIRE(h1.getHora()==0);
        REQUIRE(h1.getMinuto()==30);
    }
}

TEST_CASE("Ex6", "[Probando calculaHoraFinal]")
{
    Evento e;
    SECTION("Verificando que si construya la hora final correctamente")
    {
        e.setHoraInicio(Hora(10, 30));
        e.setDuracion(120);
        REQUIRE(e.calculaHoraFinal().getHora()==12);
        REQUIRE(e.calculaHoraFinal().getMinuto()==30);
    }
}